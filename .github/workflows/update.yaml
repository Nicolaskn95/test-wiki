name: Update Wiki Home on page creation

on:
  gollum:

jobs:
  update-home:
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Wiki Repo
        uses: actions/checkout@v4
        with:
          # Faz o checkout do repositório do wiki, não do principal
          repository: ${{ github.repository }}.wiki
          # Usa o token automático do GitHub Actions para ter permissão de escrita
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Home.md
        run: |
          # Extrai o nome da página da mensagem do commit (Ex: "Created My-New-Page")
          commit_message=$(git log -1 --pretty=%B)
          page_name=$(echo "$commit_message" | sed -n 's/.* \([^ ]*\)$/\1/p')

          if [ -z "$page_name" ]; then
            echo "Não foi possível determinar o nome da página a partir da mensagem do commit."
            exit 0
          fi

          if [ "$page_name" = "Home" ]; then
            echo "A alteração foi na Home.md, nenhuma atualização é necessária."
            exit 0
          fi

          echo "Página atualizada detectada: $page_name"

          # Tenta extrair o título H1 (linha com #) do arquivo .md
          page_file="${page_name}.md"
          if [ -f "$page_file" ] && title_from_file=$(grep -m 1 '^# ' "$page_file"); then
            # Remove o '# ' do início para obter o título puro
            page_title=$(echo "$title_from_file" | sed 's/^# //')
            echo "Título encontrado no arquivo: '$page_title'"
          else
            # Se não houver título H1, usa o nome do arquivo como fallback
            page_title="$page_name"
            echo "Nenhum título H1 encontrado. Usando nome do arquivo: '$page_title'"
          fi

          # Define o cabeçalho que procuramos ou adicionamos
          header="## Últimas atualizações"

          # Garante que o arquivo Home.md exista
          touch Home.md

          # Adiciona o cabeçalho ao Home.md se ele não existir
          if ! grep -q "$header" Home.md; then
            echo "Adicionando cabeçalho '$header' ao Home.md"
            echo -e "\n$header" >> Home.md
          fi

          # Cria a linha de link em Markdown usando o título extraído
          link_line="- [${page_title}]($page_name)"

          # Verifica se o link já existe para evitar duplicatas
          if grep -qF -- "$link_line" Home.md; then
            echo "O link já existe em Home.md."
            exit 0
          fi

          echo "Adicionando link ao Home.md: $link_line"

          # Usa 'sed' para inserir a nova linha de link logo abaixo do cabeçalho
          sed -i "/$header/a \\$link_line" Home.md

          echo "Conteúdo do Home.md atualizado:"
          cat Home.md

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Faz o commit apenas se houver mudanças reais no arquivo Home.md
          if git diff --quiet Home.md; then
             echo "Nenhuma alteração para fazer commit no wiki."
             exit 0
          fi

          git add Home.md
          git commit -m "Docs: Atualiza Home.md com link para '${page_title}'"
          git push
