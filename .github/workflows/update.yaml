name: Update Wiki Home on page creation

on:
  gollum:

jobs:
  update-home:
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Wiki Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}.wiki
          # Precisamos de um token de acesso pessoal para poder fazer push para o wiki
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest commit details
        id: commit
        run: |
          # Pega a mensagem do último commit
          commit_message=$(git log -1 --pretty=%B)
          # Pega o nome do arquivo do commit (funciona para criação e edição)
          file_name=$(echo "$commit_message" | sed -n 's/.* \([^ ]*\)$/\1/p' | sed 's/\.md$//')
          echo "::set-output name=file_name::$file_name"

      - name: Update wiki/Home.md with new file links
        run: |
          # Pega a lista de arquivos .md ADICIONADOS no último push na pasta 'docs/'
          # --diff-filter=A filtra apenas arquivos Adicionados (Added)
          new_files=$(git diff --name-only --diff-filter=A HEAD~1 HEAD -- 'docs/**' | grep '\.md$')

          # Se não houver novos arquivos Markdown, encerra o script com sucesso
          if [ -z "$new_files" ]; then
            echo "No new markdown files found in 'docs/'."
            exit 0
          fi

          echo "New files detected to be added to wiki:"
          echo "$new_files"

          # Entra no diretório da wiki para poder modificar os arquivos
          cd wiki

          # Define o cabeçalho que queremos procurar ou adicionar (Corrigido para "Últimas")
          header="## Últimas atualizações"

          # Verifica se o arquivo Home.md existe. Se não, cria.
          if [ ! -f Home.md ]; then
            echo "Home.md not found. Creating it."
            echo "# Bem-vindo à Wiki" > Home.md
          fi

          # Verifica se o cabeçalho já existe no Home.md
          if ! grep -q "$header" Home.md; then
            echo "Header not found. Adding '$header' to Home.md"
            # Adiciona o cabeçalho no final do arquivo se não existir
            echo -e "\n$header" >> Home.md
          fi

          # Loop para cada novo arquivo encontrado
          echo "$new_files" | while read -r file; do
            # Remove o prefixo 'docs/' do caminho
            page_name=$(echo "$file" | sed 's#^docs/##')
            
            # Cria o título a partir do nome do arquivo (remove .md)
            title=$(echo "$page_name" | sed 's/\.md$//')
            # Cria a URL para o link da wiki (remove .md)
            wiki_link=$(echo "$title" | sed 's/ /-/g')

            # Cria a linha de link em Markdown
            link_line="- [${title}]($wiki_link)"
            
            echo "Adding link to Home.md: $link_line"

            # Usa 'sed' para inserir a nova linha de link logo abaixo do cabeçalho
            sed -i "/$header/a \\$link_line" Home.md
          done

          echo "Updated Home.md content:"
          cat Home.md

          # Passo 4: Fazer commit e push das mudanças para o repositório da WIKI
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Faz o commit apenas se houver mudanças
          if git diff --quiet Home.md; then
             echo "No changes to commit to the wiki."
             exit 0
          fi

          git add Home.md
          git commit -m "Docs: Auto-update Home.md with new pages"
          git push

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add Home.md
          # Só faz o commit se houver alterações
          git diff-index --quiet HEAD || git commit -m "Update Home.md with latest changes"
          git push
